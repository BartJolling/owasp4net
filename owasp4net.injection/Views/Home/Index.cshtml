@{
    ViewData["Title"] = "OWASP Injection";
}

<div class="p-5 mb-4 text-white bg-dark rounded-3">
    <div class="container-fluid py-5">
        <h1 class="display-5 fw-bold">Injection</h1>
        <p class="col-md-8 fs-4">Injection flaws, such as SQL, OS, and LDAP injection, occur when untrusted data is sent to an interpreter as part of a command or query.</p>
        <p class="col-md-8 fs-4">The attacker’s hostile data can trick the interpreter into executing unintended commands or accessing unauthorised data.</p>
    </div>
</div>

<div class="row align-items-md-stretch">
    <div class="col-md-6">
        <div class="h-100 p-5 bg-light border rounded-3">
            <h2>SQL Injection</h2>
            <p>SQL injection is a code injection technique, used to attack data-driven applications, in which malicious SQL statements are inserted into an entry field for execution. </p>
            <p>@Html.ActionLink("SQL Injection Demo", "Index", "SqlInjection", null, new { @class = "btn btn-primary btn-lg"})</p>
        </div>
    </div>
    <div class="col-md-6">
        <div class="h-100 p-5 bg-light border rounded-3">
            <h2>Code Injection</h2>
            <p>Code injection is the exploitation of a computer bug that is caused by processing invalid data. Injection is used by an attacker to introduce (or "inject") code into a vulnerable computer program and change the course of execution.</p>
            <p>@Html.ActionLink("Code Injection Demo", "Index", "CodeInjection", null, new { @class = "btn btn-primary btn-lg"})</p>
        </div>
    </div>
</div>